name: main
on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.x']
        poetry-version: ['1.4.2']
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Poetry Check
        run: poetry check

      - name: Install Dependencies
        run: |
          make export_requirements
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Code Coverage
        uses: romeovs/lcov-reporter-action@v0.2.16
        with:
          lcov-file: coverage.lcov

  terraform-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TERRAFORM_DIRECTORY: terraform
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform init -input=false -backend=false

      - name: Terraform Format
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform validate

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build, terraform-lint]
    permissions:
      contents: write
    steps:
      - name: Release
        uses: go-semantic-release/action@v1
        if: github.ref == 'refs/heads/main'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allow-initial-development-versions: true
