name: main
on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.x'] # '3.8', '3.9', '3.10',  #TODO: Disabled beacause we are reaching GitHub action quota for private repos too quickly
        poetry-version: ['1.4.2']
        os: [ubuntu-latest] # windows-latest TODO: Disabled beacause we are reaching GitHub action quota for private repos too quickly
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Poetry Check
        run: poetry check

      - name: Install Dependencies
        run: |
          poetry build
          poetry install

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Code Coverage
        if: matrix.python-version == '3.x' && matrix.poetry-version == '1.4.2' && matrix.os == 'ubuntu-latest' && github.ref != 'refs/heads/main'
        run: make coverage

      - name: Code Coverage Report
        if: matrix.python-version == '3.x' && matrix.poetry-version == '1.4.2' && matrix.os == 'ubuntu-latest' && github.ref != 'refs/heads/main'
        uses: romeovs/lcov-reporter-action@v0.2.16
        with:
          lcov-file: coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Notebooks
        if: matrix.os == 'ubuntu-latest'
        env:
          PYDEVD_DISABLE_FILE_VALIDATION: 1
        run: make validate_notebooks

  terraform-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TERRAFORM_DIRECTORY: terraform
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform init -input=false -backend=false

      - name: Terraform Format
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ env.TERRAFORM_DIRECTORY }}
        run: terraform validate

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build, terraform-lint]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: abatilo/actions-poetry@v2

      - name: Release
        id: release
        uses: go-semantic-release/action@v1
        if: github.ref == 'refs/heads/main'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allow-initial-development-versions: true

      - name: Bump Poetry
        if: github.ref == 'refs/heads/main' && steps.release.outputs.version != ''
        run: poetry version ${{ steps.release.outputs.version }}

      - name: Deploy
        if: github.ref == 'refs/heads/main' && steps.release.outputs.version != ''
        run: |
          poetry build
          poetry publish -u __token__ -p $POETRY_PYPI_TOKEN_PYPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}

      - uses: EndBug/add-and-commit@v9
        if: github.ref == 'refs/heads/main' && steps.release.outputs.version != ''
        with:
          message: "chore(version): bump"
          default_author: github_actions
          add: pyproject.toml
